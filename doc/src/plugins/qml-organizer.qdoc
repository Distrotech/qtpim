/****************************************************************************
**
** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/
**
** This file is part of the documentation of the Qt PIM Module.
**
** $QT_BEGIN_LICENSE:FDL$
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms
** and conditions contained in a signed written agreement between you
** and Nokia.
**
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \group qml-organizer
    \ingroup qtpim
    \ingroup qtpim-qml
    \title Organizer QML API
    QML Support for the Organizer API.

    \page qml-organizer.html

    \title Organizer QML API

    \brief A QML plugin for the Organizer API.

    \section1 Overview

    To be able to use this component the QML \e {import} statement needs to
    reference the module before it can used. Simply add the following to the QML
    file:

     \snippet doc/src/snippets/declarative/moduleimports/moduleimports.qml Organizer import

    The Organizer API enables a client to request calendar, schedule and
    personal data from local or remote backends. The QML Organizer API
    delivers these capabilities in an easy to use form.

    The following describes the API. You can also study the \l{Qt Personal Information Management Examples}{Examples}
    or try the \l{Qt Personal Information Management Tutorials}{Tutorials} to help get started quickly.

    \section2 Organizer Items
    The \l {OrganizerItem} element provides a generic interface for accessing
    events, todos, journals and notes. To actually access specific fields
    of an item, convenience sub elements of OrganizerItem are offered.
    These are \l {Event}, \l {Todo}, \l {Journal} and \l {Note}. Additionally,
    \l {EventOccurrence} and \l {TodoOccurrence} can be used for manipulating
    occurrences of events or todos.

    \section2 Recurring Items
    A recurring item is an item that occurs more than once; for example, a
    meeting that occurs every week for the next 10 weeks. A recurring item
    is created by creating an Event or Todo and setting a \l {RecurrenceRule}
    on it to specify the rules for when it should recur. See
    \l {Recurrence} and \l {RecurrenceRule} for detail references.

    \section2 Collections
    Every item stored in an organizer store belongs to exactly one
    collection. A collection can have properties such as a name, a "color",
    a specified icon, a description, and so on. Collections may be added,
    modified, or removed if the backend store supports those operations.
    There will always be at least one (default) collection in an organizer
    manager, into which items are saved if no other collection is specified.

    \section2 Organizer Item Details
    Several sub elements of \l {Detail} are provided as part of the API.
    They are general in design but are intended to fulfill specific use-cases.
    Please note that certain backends may choose not to support one or more
    of these elements as they appear here.

    \section2 Organizer Filters
    The Organizer QML plugin supplies filters to search for organizer items
    with particular values for various properties in the organizer item, such as
    IDs, collections, and details, etc.

    \section1 Reference documentation

    \section2 Main Classes
    \annotatedlist qml-organizer-main

    \section2 Item Classes
    \annotatedlist qml-organizer-items

    \section2 Detail Leaf Classes
    \annotatedlist qml-organizer-details

    \section2 Item Selection And Sorting
    \annotatedlist qml-organizer-filters

    \section2 Examples

    The following sample applications show examples of API usage:
    \list
        \li \l{qmlorganizerlistview}{Qt Quick Organizer List view}
    \endlist

    \section2 Tutorials

    The following tutorials are useful to work through the use of the Qt Quick Organizer API::
    \list
        \li \l{Organizer Qt Quick ListView Tutorial}{Qt Quick Organizer List view Tutorial}
    \endlist
*/
